<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>信息 on 菜鸡实验室</title>
    <link>/tags/%E4%BF%A1%E6%81%AF/</link>
    <description>Recent content in 信息 on 菜鸡实验室</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Feb 2021 11:58:00 +0800</lastBuildDate>
    
	<atom:link href="/tags/%E4%BF%A1%E6%81%AF/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>获取信息的个人技巧和流程</title>
      <link>/post/get-information-skills/</link>
      <pubDate>Mon, 01 Feb 2021 11:58:00 +0800</pubDate>
      
      <guid>/post/get-information-skills/</guid>
      <description>很久之前写了一篇《我是如何获取信息的》，当时说要开坑讲讲方法论和技巧之类的东西，由于各种因素耽搁了。现在终于恢复常态，可以静下心来复盘总结一下了，也当是对自己的一次提升。权当抛砖引玉，如有不足之处欢迎交流。
前言 现在是互联网时代，互联网上浩如烟海的信息充斥着我们的视野和脑海，一不小心就迷失了。所以正确获取信息就是我们的一门必修课了，为什么说是必修呢，因为这不仅影响到我的学习，还影响到我们生活中的其他方面，比如看新闻、吃瓜、和别人撕逼等等，也是很有必要的，会帮助你树立正确的三观和立于不败之地。本篇文章的内容主要分这几部分：如何挑选和过滤信息渠道；如何自主寻找更多的信息；以及如何总结提炼和运用信息。
如何挑选过滤信息 正如前言所说，信息的来源是十分重要的，如果这一步出了问题，那么后面的其他步也不会好到哪里去。所以我们要把信息来源的甄别提到一个十分重视的地位。关于一些我认为可以接触的信息渠道，在上一篇《我是如何获取信息的》里面我已经提到一些，这里我要说的是几个原则：
 首先所有的渠道都不是永远可信的，渠道本身可能随着时间会新增、减少或者被替换 所有的渠道都有一定的无用信息。这里的无用指的是，在“功利性阅读”的情况下，有些信息我们没有必要去浏览。我们需要选择无用信息尽量少的渠道。而一旦你的目标更改，对于“无用”的定义改变，渠道也随之需要更换，这也印证了上一点。 所有的信息都需要我们反复的去印证，不能全信。在这个方法框架下没有完全的权威，一切基于独立思考。  下面说一些信息来源：对于我们的专业知识，比如我比较专注于IT类的知识，有些业内著名的网站是值得推荐的，像github，同时也有一些大学在线教程、著名IT公司、框架的开发者文档等。
另外就是非干货型的网站，一般是论坛类的地方，里面会有一些用户的思考和分享，这些对于开阔思路很重要。
基于订阅系统的信息渠道，比如RSS，邮件等，由于是针对我们个人的兴趣爱好进行了一次过滤，所以质量也比较高。
最后是群组类的渠道，对于越冷门的群组，其信息质量也相对较高。有一些群组人多起来渐渐的就最终变成吹水群，这时候我们就该要考虑放弃这个渠道了。
需要注意的是，对于一条信息，我们可以有多个不同渠道来进行对比和印证。比如我在群里看到了一个截图，我会从截图上的各种信息去找到对应的媒体来源，判断是否是真的；同时也会找到一系列同样的消息，可能包含更多原图没有的内容，从而帮助我们更好的判断事情。
如何自主寻找更多的信息 在找到适合我们的渠道以后就开始着手浏览信息了，对于信息的寻找我自己有一些独特的见解和方法，这里稍微分享一下：
全网搜索 对于全网搜索比如百度和谷歌，需要灵活运用其高级搜索功能。在搜索框下方有个工具条，里面包含了一些常用的高级搜索功能。有一些我个人比较常用的高级搜索功能，包括：排除某个网站（-csdn） 包含某个网站（site:www.zhihu.com） 限定搜索结果为某类文档（比如pdf）限定时间（针对某些新闻类）
站内搜索 除了全网搜索引擎之外，还有一个很强大的东西是站内搜索。比如著名的github，其站内搜索对于中文不够友好，但是如果我们灵活运用他提供的功能是可以很大的提升搜索效率。
比如限定语言类型，搜索某个用户的项目时限定是他创建的而不是fork的，等等。
对于微信公众号也有站内搜索，其“搜一搜”可以优先展示你关注的账号里面的信息，另外对于一个账号想要找他的历史文章，也可以打开他的主页，在右上角有个搜索按钮，就可以更精准的搜索他的文章。又比如对聊天记录的搜索（这里我要吐槽一下垃圾微信，被QQ完爆，QQ存在电脑上的聊天记录搜索是真的强大），可以很快的找到你想要的信息。
纵深型寻找 我不知道这是不是我独创的词，但是我这个方法应该有一些人会。
对于信息流类型的网站，其信息是一条条的，每一条都是一个账号发出的。当我们看到一篇文章时，里面写着“请看上期所说的XXX”，其实就很自然的去到他的个人主页里面，找到其历史文章的上一篇了。
另外如果在文章下面的讨论里面发现了你想要的问题，也可以去这些发言用户的主页找找有没有解决后的分享。
无目标寻找 很多时候我们是带着目标去找一些信息，但是其实想要更大限度的扩展视野，我们需要无目标的寻找。我想起当年小时候，我是个爱看书的孩子，但是我并不是每次都确定要买什么书了才去书店，而是在书店的书架上漫无目的的走马观花，看到有意思的书就拿起来深入看一下。
而在互联网时代，如果你掌握了我上面所说的方法，也是可以做到无目标寻找的。虽然网上信息那么多，但是我们可以借助站内搜索和纵深型寻找来做这件事。
举个例子：比如我找到了一篇博文，觉得作者很牛逼。我可以在他的博客上看看其他的文章。如果他没有贴个人介绍，我可以从某些文章里的github地址找到他的github主页，进而看看他的更多项目。另外我可以看看他star的项目，看看他fork的项目，看看他follow的人以及这些人的重要项目。这就是从一篇文章引发的一次风暴。
其实社交网站的“转发”功能也包含了这一逻辑，希望用户可以发现更多的有价值账号，进而关注他。不过社交网站的信息质量并不算很高，但是这种方法是可以运用到其他干货型网站的。
举两个例子 第一个是我在群里聊天，谈到一个框架，之前看过但是忘了名字了，只知道是腾讯的，做什么用的框架。首先第一步百度搜，没有找到。然后Google也没有找到。然后github站内搜索也没有找到。最终找到的方法是：先直接去找到腾讯在github上的开源org地址（这个地址是我能记住的，名字就是tencent，所以地址就是 https://github.com/tencent），然后在其名下查找项目。由于是我最近浏览过的项目，直接按默认的日期排序就能很容易的找到他了。
另外一个是我看到一个博客，知道他是静态博客，似乎是基于github issue 做的，想看看他的实现。但是网站上没有任何可以找到github地址的信息。于是我在github进行了一个站内搜索，关键字就是博客域名，由于这种博客一般都是用github page+自定义域名实现的，所以在github如果有项目就能找到他配的域名。果然就找到了我想要的项目。当然一个更为简单的方法是打开F12看请求，由于文章内容是基于gitHub issue的，所以一般都会请求一个github的仓库地址，这样就可以直接找到。
如何总结提炼和运用信息 接收信息以后，需要将其变为自己的一部分，也就是内化和升华。目前来说主要还是两个方法，一是交流，二是输出。这两者可以同时进行，也可以单独进行。交流的话主要还是各种社交媒体，社区分享，群组交流，线下聊天讨论，工作之余和同事互相讨论等等，而输出的话主要是将内容制作成作品，比如文章、视频等形式。我除了在这里写博文外，还会在社交媒体上发布一些短小的内容，有一些是随手而发的，有一些则是用电报频道进行历史存档，然后同步到社交媒体上面的。
参考文章 构建终身学习体系进行自我提升</description>
    </item>
    
    <item>
      <title>我是如何获取信息的</title>
      <link>/post/get-infomation/</link>
      <pubDate>Mon, 04 Nov 2019 22:53:04 +0800</pubDate>
      
      <guid>/post/get-infomation/</guid>
      <description>开这个坑主要是有两个原因：其一是互联网时代信息太庞杂和太碎片化，正确高效的获取信息已经成为我们这行的必备技能之一；再有一个就是我身边认识的有些人实在是在这方面真的很弱——即使他技术和成就都高于我。当然我也并不算是很强，相比那些非常自律、已经完全融入都市生活的工程师，半自由、全自由职业者，以及那些游离于科技和文学之间的媒体工作者，我仍然是这方面的婴儿。权当抛砖引玉，以后有缘再更新。
回忆 幸运的我从刚开始使用电脑，就比较敏锐的认识到了搜索技能的重要性，我的第一代方案是离线保存。无论什么软件 文档 资料，我都喜欢直接保存到电脑上，没事翻翻看看，整理文件夹的时候正好回忆，加重印象。后面开拓了浏览器战场，利用浏览器收藏夹保存网站，也是不定时整理（别觉得我会偷懒，实际上我整理的频率相当高）。
在刚进入开发行业的时候我几乎是从第一套方案开始重新走了一个轮回——因为我以前保存的那些东西在这个行业几乎都没啥用了。后面发现了这个行业的特点：信息源还是比较集中和高保真性（不过时，很少有虚假信息），所以我专注在热门站点的二次搜索结果上（这时候我的初代搜索技能也发挥了很大作用，感谢）。同时结合云笔记服务和订阅服务，最终形成了目前的方案。
现在 我的信息获取渠道有这些：
 浏览器（仍然是主力）
 云储存 云笔记（前者主要用来保存一些大体积资料）
 订阅
 网站
  关于浏览器的使用有如下几个技巧：
 搜索技能（后面会讲） 存一个页面并不只是这个页面的内容，也可能是这整个母站点。比如从一篇教程引申到整个教程网站，从一个视频引申到这个up主的所有作品，从一个github项目引申到这个开发者所有项目。 常整理，我的做法是建立一个temp目录，这个目录下是每天必看，该删的删，该移到其他地方也要移。有时想学一个东西，网址也会先存在这里，每天从这里打开。  云储存相信很多人都在用，没错就是类似百度网盘的那种玩意儿。我现在还没达到“都看”的境界，只能说多一个途径多一种可能吧。
云笔记我个人在用google keep，因为我写东西比较散，而且不喜欢复制大段的格式化文本（这种情况我会直接存收藏夹）。轻量级的google keep正好适合我
订阅分几种：邮件，订阅号。实质上都是一样的，都是被动接收推送，而且是经过筛选的，信息质量比较高。订阅的也不一定都看，有些是太忙，有些是经过筛选仍然不符合我需求。那么下面给出我认为比较好的一些订阅源，可能level不是很高，但是这个订阅列表本身也是会随着我的水平而更新的，现阶段我感觉我也就这样了：
 邮件订阅：码农周刊，SegmentFault，开源中国（没订阅github，这个后面说） 微信订阅：思哲与财富，infoQ，好奇心日报，傅老师 电报订阅：少数派，湾区日报，IPN播客网络，小破不入渠，Drakeets  关于网站没啥好说的，有些东西是和「搜索技能」联系在一起的。这里只列举：
 v2ex github（没错，这个东西可以每天都逛的，并不只是一个纯粹的资料站） B站 twitter  其他闲话 目标：能习惯英文阅读，可以看一看除代码之外的英文资料，比如reddit，twitter英文内容，Quora，Google Group某些项目反馈区和github issue区，以及一些英文的文档资料。
另一个目标：更加融入社会一些，虽然我已不看知乎这种纯娱乐化的东西，偶尔看看微博沙雕段子和在上面获取新闻，但是可以吸收一些诸如外包平台、各种聊车房娃投资的地方的信息。社交网络尽量用的自然一些。</description>
    </item>
    
  </channel>
</rss>